{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [
        "scrap_monitoring"
      ],
      "targetBlank": false,
      "title": "Scrap Monitoring Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "orange",
                "value": 20
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 11,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"operation\"] == \"${operation}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> keep(columns: [\"_time\",\"_value\",\"outcome\"])\n  |> sum(column: \"_value\")\n  |> pivot(valueColumn: \"_value\", columnKey: [\"outcome\"], rowKey: [])\n  |> map(fn: (r) => ({r with rework: if r.rework > 0 then r.rework  else 0, scrap: if r.scrap > 0 then r.scrap else 0}))",
          "refId": "A"
        }
      ],
      "title": "Overall Totals",
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "configRefId": "A",
            "mappings": [
              {
                "fieldName": "pass",
                "handlerKey": "max",
                "reducerId": "lastNotNull"
              }
            ]
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "rework",
                "scrap"
              ]
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "orange",
                "value": 20
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 16,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"operation\"] == \"${operation}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> keep(columns: [\"_time\",\"_value\",\"outcome\"])\n  |> sum(column: \"_value\")\n  |> pivot(valueColumn: \"_value\", columnKey: [\"outcome\"], rowKey: [])\n  |> map(fn: (r) => ({r with rework_ratio: if r.rework > 0 then float(v:100*r.rework)/float(v:r.pass) else 0.0, scrap_ratio: if r.scrap > 0 then float(v:100*r.scrap)/float(v:r.pass) else 0.0}))",
          "refId": "A"
        }
      ],
      "title": "Overall Ratios",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "rework_ratio",
                "scrap_ratio"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "rework_ratio": 1,
              "scrap_ratio": 0
            },
            "renameByName": {
              "rework_percent": "Rework percent",
              "rework_ratio": "Rework : Good",
              "scrap_percent": "Scrap percent",
              "scrap_ratio": "Scrap : Good"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 87,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "scrap"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "pass"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "rework"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-orange",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "id": 6,
      "options": {
        "barRadius": 0,
        "barWidth": 1,
        "fullHighlight": false,
        "groupWidth": 0.9,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\r\n  |> filter(fn: (r) => r[\"operation\"] == \"${operation}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\r\n  |> keep(columns: [\"_time\",\"_value\",\"outcome\"])\r\n  |> aggregateWindow(every: ${time_bucket}, fn: sum, createEmpty: true)",
          "refId": "A"
        }
      ],
      "title": "Totals",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 170
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 57
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "outcome"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 82
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "part"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 207
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 4
      },
      "id": 17,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\r\n  |> filter(fn: (r) => r[\"operation\"] == \"${operation}\")\r\n  |> filter(fn: (r) => r[\"outcome\"] != \"pass\")\r\n  \r\n  |> keep(columns: [\"_time\", \"_value\", \"part\", \"outcome\", \"reason\"])\r\n  |> group()\r\n",
          "refId": "A"
        }
      ],
      "title": "Recent Scrap & Rework",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "_time"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "part": false
            },
            "indexByName": {
              "_time": 0,
              "_value": 2,
              "outcome": 3,
              "part": 1,
              "reason": 4
            },
            "renameByName": {
              "_time": "Time",
              "_value": "Count",
              "outcome": "Outcome",
              "part": "Part",
              "reason": "Reason"
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "30s",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "scrap_monitoring"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "Machining",
          "value": "Machining"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb"
        },
        "definition": "from(bucket: \"fault_capture\")\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\r\n  |> keep(columns: [\"operation\"])\r\n  |> distinct(column: \"operation\")\r\n  |> filter(fn: (r) => r[\"operation\"] != \"null\")\r\n  |> group()",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "operation",
        "options": [],
        "query": "from(bucket: \"fault_capture\")\r\n  |> range(start: -7d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\r\n  |> keep(columns: [\"operation\"])\r\n  |> distinct(column: \"operation\")\r\n  |> filter(fn: (r) => r[\"operation\"] != \"null\")\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "5m",
          "value": "5m"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Time Bucket",
        "multi": false,
        "name": "time_bucket",
        "options": [
          {
            "selected": true,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "15m",
            "value": "15m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          }
        ],
        "query": "5m, 10m, 15m, 30m, 1h , 1d",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Operation View",
  "uid": "JzdmAQB4k",
  "version": 12,
  "weekStart": ""
}